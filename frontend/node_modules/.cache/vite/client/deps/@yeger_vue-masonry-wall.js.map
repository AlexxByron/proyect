{
  "version": 3,
  "sources": ["../../../../@yeger/vue-masonry-wall/dist/index.mjs"],
  "sourcesContent": ["import { defineComponent as z, toRefs as L, ref as S, onMounted as N, onBeforeUnmount as U, watch as W, openBlock as m, createElementBlock as v, normalizeStyle as $, unref as i, Fragment as A, renderList as D, renderSlot as V, createTextVNode as j, toDisplayString as q, nextTick as G } from \"vue\";\nconst H = [\"data-index\"], J = /* @__PURE__ */ z({\n  __name: \"masonry-wall\",\n  props: {\n    columnWidth: { default: 400 },\n    items: {},\n    gap: { default: 0 },\n    rtl: { type: Boolean, default: !1 },\n    ssrColumns: { default: 0 },\n    scrollContainer: { default: null },\n    minColumns: {},\n    maxColumns: {},\n    keyMapper: { type: Function, default: (o, c, _, r) => r }\n  },\n  emits: [\"redraw\", \"redrawSkip\"],\n  setup(o, { emit: c }) {\n    const _ = o, {\n      columnWidth: r,\n      items: u,\n      gap: f,\n      rtl: k,\n      ssrColumns: g,\n      scrollContainer: C,\n      minColumns: y,\n      maxColumns: w,\n      keyMapper: E\n    } = L(_), d = S([]), p = S();\n    function x(t, e, n, l) {\n      const a = B(n);\n      return l + e + a <= t ? x(\n        t,\n        e,\n        n + 1,\n        l + e + a\n      ) : n;\n    }\n    function B(t) {\n      const e = Array.isArray(r.value) ? r.value : [r.value];\n      return e[t % e.length];\n    }\n    function b() {\n      const t = x(\n        p.value.getBoundingClientRect().width,\n        f.value,\n        0,\n        // Needs to be offset my negative gap to prevent gap counts being off by one\n        -f.value\n      ), e = Y(F(t));\n      return e > 0 ? e : 1;\n    }\n    function F(t) {\n      const e = w == null ? void 0 : w.value;\n      return e && t > e ? e : t;\n    }\n    function Y(t) {\n      const e = y == null ? void 0 : y.value;\n      return e && t < e ? e : t;\n    }\n    function M(t) {\n      return [...new Array(t)].map(() => []);\n    }\n    if (g.value > 0) {\n      const t = M(g.value);\n      u.value.forEach(\n        (e, n) => t[n % g.value].push(n)\n      ), d.value = t;\n    }\n    async function T(t) {\n      if (t >= u.value.length)\n        return;\n      await G();\n      const e = [...p.value.children];\n      k.value && e.reverse();\n      const n = e.reduce(\n        (l, a) => a.getBoundingClientRect().height < l.getBoundingClientRect().height ? a : l\n      );\n      d.value[+n.dataset.index].push(t), await T(t + 1);\n    }\n    async function h(t = !1) {\n      if (d.value.length === b() && !t) {\n        c(\"redrawSkip\");\n        return;\n      }\n      d.value = M(b());\n      const e = C == null ? void 0 : C.value, n = e ? e.scrollTop : window.scrollY;\n      await T(0), e ? e.scrollBy({ top: n - e.scrollTop }) : window.scrollTo({ top: n }), c(\"redraw\");\n    }\n    const s = typeof ResizeObserver > \"u\" ? void 0 : new ResizeObserver(() => h());\n    return N(() => {\n      h(), s == null || s.observe(p.value);\n    }), U(() => s == null ? void 0 : s.unobserve(p.value)), W([u, k], () => h(!0)), W([r, f, y, w], () => h()), (t, e) => (m(), v(\"div\", {\n      ref_key: \"wall\",\n      ref: p,\n      class: \"masonry-wall\",\n      style: $({ display: \"flex\", gap: `${i(f)}px` })\n    }, [\n      (m(!0), v(A, null, D(d.value, (n, l) => (m(), v(\"div\", {\n        key: l,\n        class: \"masonry-column\",\n        \"data-index\": l,\n        style: $({\n          display: \"flex\",\n          \"flex-basis\": `${B(l)}px`,\n          \"flex-direction\": \"column\",\n          \"flex-grow\": 1,\n          gap: `${i(f)}px`,\n          height: [\"-webkit-max-content\", \"-moz-max-content\", \"max-content\"],\n          \"min-width\": 0\n        })\n      }, [\n        (m(!0), v(A, null, D(n, (a, R) => (m(), v(\"div\", {\n          key: i(E)(i(u)[a], l, R, a),\n          class: \"masonry-item\"\n        }, [\n          V(t.$slots, \"default\", {\n            item: i(u)[a],\n            column: l,\n            row: R,\n            index: a\n          }, () => [\n            j(q(i(u)[a]), 1)\n          ])\n        ]))), 128))\n      ], 12, H))), 128))\n    ], 4));\n  }\n}), P = /* @__PURE__ */ (() => {\n  const o = J;\n  return o.install = (c) => {\n    c.component(\"MasonryWall\", o);\n  }, o;\n})();\nexport {\n  P as default\n};\n"],
  "mappings": "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",
  "names": []
}
